name: Create zip release

# This workflow is triggered on pushes to /files directory
on:
  push:
    paths: 'files/**'


jobs:
 # Job 1
 build:
    name: build and upload release
    # This job runs on latest Windows container
    runs-on: windows-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2.1.0
    - run: dir
      shell: cmd
    - name: Display Powershell Version
      run: $PSVersionTable
      shell: powershell
    - name: Create ZIP
      run: '. .\CreateZipFile.ps1'
      shell: powershell
    - name: Check zip file exists
      run: If(Test-path $FILENAME) {write-host "Zip file found"}      
    - run: dir
      shell: cmd
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release generated by Github Actions automatically
        draft: false
        prerelease: true
    - name: Upload Release Asset
      id: release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./files.zip
        asset_name: myfiles.zip
        asset_content_type: application/zip

 # Job 2
 test:
   needs: [build]
   name: test zip file
   runs-on: windows-latest
   defaults:
     run:
       shell: powershell
   env:
     FILENAME: files.zip
     EXTRACTPATH: ./extractzip
   steps:
     - run: dir
       shell: cmd
     - name: Check zip file exists
       run: If(Test-path $FILENAME) {write-host "Zip file found"}
     - name: Test file extraction
       run: Expand-Archive -Path $FILENAME -DestinationPath $EXTRACTPATH
     - name: tree listing for log verification
       run: Get-ChildItem $EXTRACTPATH

 # Job 3
 release:
   runs-on: ubuntu-latest
   needs: [test]
   name: publish release
   steps:
     - name: change release status
       uses: 
