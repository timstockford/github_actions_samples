name: Create zip release

# This workflow is triggered on pushes to /files directory
on:
  push:
    paths: 'files/**'


jobs:
 # Job 1
 build:
    name: build and create draft release
    # This job runs on latest Windows container
    runs-on: windows-latest
    # Default shell language for job
    defaults:
      run:
        shell: powershell
    # Environment variables for job
    #TODO Parametrise ZIP FILENAME 
    env:
       FILENAME: files.zip
       EXTRACTPATH: ./extractzip
    # Job level defined outputs (accessible to dependant child jobs)
    outputs:
      RELEASEID: ${{ steps.create_release.outputs.id }}
      RELEASE_ASSETID: ${{ steps.release_asset.outputs.id }}
      RELEASE_ASSETURL: ${{ steps.release_asset.outputs.browser_download_url }}
    # Steps definition
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2.1.0
    - run: Get-ChildItem
    - name: Display Powershell Version
      run: $PSVersionTable
    - name: Create ZIP
      run: '. .\CreateZipFile.ps1'
    - run: Get-ChildItem
    - name: Check zip file exists
      run: If(Test-path $env:FILENAME) {write-host "Zip file found"}
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release generated by Github Actions automatically
        draft: true
        prerelease: false
    - name: Upload Release Asset
      id: release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. 
        asset_path: ./files.zip
        asset_name: myfiles.zip
        asset_content_type: application/zip

 # Job 2
 test:
   needs: [build]
   name: test zip file extraction
   runs-on: windows-latest
   defaults:
     run:
       shell: powershell
   env:
     ASSETID: ${{ needs.build.outputs.RELEASE_ASSETID }}
     DNLDURL: ${{ needs.build.outputs.RELEASE_ASSETURL }}
     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   steps:
     - run: Get-ChildItem
     - run: echo %DNLDURL%
       shell: cmd
     - run: |
         echo "Authorization: token "$env:GITHUB_TOKEN
     - run: |
         curl.exe -H "Authorization: token "$env:GITHUB_TOKEN -L $env:DNLDURL -o myFiles.zip
     - run: type myFiles.zip
     - run: |
         Expand-Archive -Path .\myFiles.zip -DestinationPath .\ExpandedZip
     - run: |
         Get-ChildItem -Recurse .\ExpandedZip

 # Job 3
 release:
   needs: [test]
   runs-on: ubuntu-latest
   name: publish new release
   steps:
     - name: change release status
       uses: eregon/publish-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         release_id: ${{ needs.build.outputs.RELEASEID }}
